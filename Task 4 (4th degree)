import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Sample tractor age and maintenance cost data
tractor_age = np.array([2, 3, 5, 7, 9, 10, 12, 14, 15, 17, 19, 20, 21, 23, 25, 26, 28]).reshape(-1, 1)
maintenance_cost = np.array([700, 650, 600, 900, 1210, 1410, 1400, 1410, 1420, 1490, 1600, 1210, 1300, 900, 700, 780, 700])

# Transform the data for 4th-degree polynomial regression
poly = PolynomialFeatures(degree=4)
tractor_age_poly = poly.fit_transform(tractor_age)

# Fit the polynomial regression model
poly_model = LinearRegression()
poly_model.fit(tractor_age_poly, maintenance_cost)

# Predictions using the polynomial model
predicted_cost_poly = poly_model.predict(tractor_age_poly)

# Compute MSE for evaluation
mse_poly4 = mean_squared_error(maintenance_cost, predicted_cost_poly)

# Plot the actual data and the polynomial regression curve
plt.figure(figsize=(8, 6))
plt.scatter(tractor_age, maintenance_cost, color='blue', label='Actual Data')
plt.plot(tractor_age, predicted_cost_poly, color='purple', label='4th-Degree Polynomial Fit')
plt.title('Tractor Age vs Maintenance Cost (4th-Degree Polynomial Fit)')
plt.xlabel('Tractor Age (Years)')
plt.ylabel('Maintenance Cost ($)')
plt.legend()
plt.grid(True)
plt.show()

# Print evaluation metrics
print(f"Mean Squared Error (MSE) for 4th-degree Polynomial Fit: {mse_poly4}")
print(f"Coefficients: {poly_model.coef_}")
print(f"Intercept: {poly_model.intercept_}")

